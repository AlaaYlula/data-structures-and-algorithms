/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Merge_Sort;

import org.junit.jupiter.api.Test;

import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    @Test void TestMergeSort(){
        int[] arrayList = new int[]{ 8,4,23,42,16,15 };
        mergeSort(arrayList);
        int[] result = new int[]{4,8,15,16,23,42};
        assertArrayEquals(result,arrayList);
    }
    public static void mergeSort(int[] arr){
        int n = arr.length;
        if(n>1){
            int mid = n/2;
            int[] leftArray = new int[mid];
            for (int i = 0; i < leftArray.length; i++) {
                leftArray[i] = arr[i];
            }
            int[] rightArray = new int[n-mid];
            for (int j = 0; j < rightArray.length ; j++) {
                rightArray[j] = arr[mid+j];
            }
//            System.out.println(Arrays.toString(leftArray));
//            System.out.println(Arrays.toString(rightArray));
//            System.out.println("/////");
            mergeSort(leftArray);
            mergeSort(rightArray);
            merge(leftArray,rightArray,arr);
        }
    }
    public static void merge(int[] leftArray , int[] rightArray , int[] arr){
        //System.out.println("merge");
        int i=0;
        int j=0;
        int k=0;
        while( i < leftArray.length && j < rightArray.length) {
            if (leftArray[i] <= rightArray[j]) {
                arr[k] = leftArray[i];
                i++;
            } else {
                arr[k] = rightArray[j];
                j++;
            }
            k++;
        }

        if(i == leftArray.length){
            while ( j < rightArray.length){
                arr[k] = rightArray[j];
                j++;
                k++;
            }
        }
        if( j == rightArray.length){
            while ( i < leftArray.length){
                arr[k] = leftArray[i];
                i++;
                k++;
            }
        }
//        System.out.println(Arrays.toString(leftArray));
//        System.out.println(Arrays.toString(rightArray));
//        System.out.println(Arrays.toString(arr));
//        System.out.println("End merge");

    }
}
